[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Aleksandar\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Aleksandar\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 64.6721ms
[debug]       Load.loadUnit: defsScala took 0.2143ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.3259 ms
[debug]           Load.resolveProject(global-plugins) took 36.2818ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Aleksandar\.sbt\1.0\plugins, plugins: List(<none>))) took 68.6095ms
[debug] [Loading] Done in C:\Users\Aleksandar\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 83.9557ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1718ms
[debug]     Load.loadUnit(file:/C:/Users/Aleksandar/.sbt/1.0/plugins/, ...) took 153.7343ms
[debug]   Load.apply: load took 280.5503ms
[debug]   Load.apply: resolveProjects took 4.6414ms
[debug]   Load.apply: finalTransforms took 42.9909ms
[debug]   Load.apply: config.delegates took 5.7516ms
[debug]   Load.apply: Def.make(settings)... took 261.4208ms
[debug]   Load.apply: structureIndex took 71.7353ms
[debug]   Load.apply: mkStreams took 1.3041ms
[info] loading global plugins from C:\Users\Aleksandar\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2120.8791ms
[debug]           Load.loadUnit: plugins took 17.247ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\Computer_Systems_Assignment_2\project
[debug]             Load.loadUnit: mkEval took 8.3491ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2869 ms
[info] loading settings for project computer_systems_assignment_2-build from idea2.sbt ...
[debug]               Load.resolveProject(computer_systems_assignment_2-build) took 2.0584ms
[debug]             Load.loadTransitive: finalizeProject(Project(id computer_systems_assignment_2-build, base: C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, plugins: List(<none>))) took 3.7701ms
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, returning: (computer_systems_assignment_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1518.0158ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.3987ms
[debug]         Load.loadUnit(file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/project/, ...) took 1539.3913ms
[debug]       Load.apply: load took 1540.3384ms
[debug]       Load.apply: resolveProjects took 0.0769ms
[debug]       Load.apply: finalTransforms took 5.5854ms
[debug]       Load.apply: config.delegates took 0.3299ms
[debug]       Load.apply: Def.make(settings)... took 60.8485ms
[debug]       Load.apply: structureIndex took 19.4675ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Aleksandar\Computer_Systems_Assignment_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2994.1225ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\Computer_Systems_Assignment_2
[debug]       Load.loadUnit: mkEval took 0.2885ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.934 ms
[info] loading settings for project computer_systems_assignment_2 from build.sbt ...
[debug]         Load.resolveProject(computer_systems_assignment_2) took 19.1137ms
[debug]       Load.loadTransitive: finalizeProject(Project(id computer_systems_assignment_2, base: C:\Users\Aleksandar\Computer_Systems_Assignment_2, plugins: List(<none>))) took 21.8733ms
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2, returning: (computer_systems_assignment_2)
[debug]     Load.loadUnit: loadedProjectsRaw took 801.3945ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.7949ms
[debug]   Load.loadUnit(file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/, ...) took 3797.7852ms
[debug] Load.apply: load took 3798.8641ms
[debug] Load.apply: resolveProjects took 0.0958ms
[debug] Load.apply: finalTransforms took 15.6822ms
[debug] Load.apply: config.delegates took 0.2294ms
[debug] Load.apply: Def.make(settings)... took 40.8298ms
[debug] Load.apply: structureIndex took 17.483ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to computer_systems_assignment_2 (in build file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60315 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60315, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to computer_systems_assignment_2 (in build file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/)
[debug] > Exec(idea-shell, None, None)
