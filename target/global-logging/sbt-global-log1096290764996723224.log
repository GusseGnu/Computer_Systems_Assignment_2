[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Aleksandar\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Aleksandar\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 66.7276ms
[debug]       Load.loadUnit: defsScala took 0.1928ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.0913 ms
[debug]           Load.resolveProject(global-plugins) took 45.2789ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Aleksandar\.sbt\1.0\plugins, plugins: List(<none>))) took 79.2077ms
[debug] [Loading] Done in C:\Users\Aleksandar\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 94.5445ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2748ms
[debug]     Load.loadUnit(file:/C:/Users/Aleksandar/.sbt/1.0/plugins/, ...) took 167.3223ms
[debug]   Load.apply: load took 307.4583ms
[debug]   Load.apply: resolveProjects took 4.4912ms
[debug]   Load.apply: finalTransforms took 41.0301ms
[debug]   Load.apply: config.delegates took 5.4203ms
[debug]   Load.apply: Def.make(settings)... took 271.8962ms
[debug]   Load.apply: structureIndex took 70.6943ms
[debug]   Load.apply: mkStreams took 1.1451ms
[info] loading global plugins from C:\Users\Aleksandar\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2234.1026ms
[debug]           Load.loadUnit: plugins took 18.3103ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\Computer_Systems_Assignment_2\project
[debug]             Load.loadUnit: mkEval took 5.813ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5983 ms
[info] loading settings for project computer_systems_assignment_2-build from idea2.sbt ...
[debug]               Load.resolveProject(computer_systems_assignment_2-build) took 2.6764ms
[debug]             Load.loadTransitive: finalizeProject(Project(id computer_systems_assignment_2-build, base: C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, plugins: List(<none>))) took 4.6529ms
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2\project, returning: (computer_systems_assignment_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 102.3907ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2969ms
[debug]         Load.loadUnit(file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/project/, ...) took 124.7569ms
[debug]       Load.apply: load took 125.8416ms
[debug]       Load.apply: resolveProjects took 0.084ms
[debug]       Load.apply: finalTransforms took 5.514ms
[debug]       Load.apply: config.delegates took 0.3848ms
[debug]       Load.apply: Def.make(settings)... took 53.0958ms
[debug]       Load.apply: structureIndex took 19.4888ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\Aleksandar\Computer_Systems_Assignment_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 420.4859ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\Aleksandar\Computer_Systems_Assignment_2
[debug]       Load.loadUnit: mkEval took 0.2117ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7517 ms
[info] loading settings for project computer_systems_assignment_2 from build.sbt ...
[debug]         Load.resolveProject(computer_systems_assignment_2) took 20.1915ms
[debug]       Load.loadTransitive: finalizeProject(Project(id computer_systems_assignment_2, base: C:\Users\Aleksandar\Computer_Systems_Assignment_2, plugins: List(<none>))) took 22.8176ms
[debug] [Loading] Done in C:\Users\Aleksandar\Computer_Systems_Assignment_2, returning: (computer_systems_assignment_2)
[debug]     Load.loadUnit: loadedProjectsRaw took 55.2566ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.1683ms
[debug]   Load.loadUnit(file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/, ...) took 479.3898ms
[debug] Load.apply: load took 480.5984ms
[debug] Load.apply: resolveProjects took 0.1111ms
[debug] Load.apply: finalTransforms took 16.9934ms
[debug] Load.apply: config.delegates took 0.2576ms
[debug] Load.apply: Def.make(settings)... took 89.6954ms
[debug] Load.apply: structureIndex took 15.0472ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to computer_systems_assignment_2 (in build file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52861 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52861, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to computer_systems_assignment_2 (in build file:/C:/Users/Aleksandar/Computer_Systems_Assignment_2/)
[debug] > Exec(idea-shell, None, None)
